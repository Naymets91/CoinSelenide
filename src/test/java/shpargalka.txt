public class Shpargalka { }

  /*
-Dfile.encoding=UTF8
https://github.com/Naymets91/CoinSelenide.git
clean test


  import org.openqa.selenium.chrome.ChromeOptions;

        Configuration.timeout = 20000;              // таймаут ожидание времени
        Configuration.startMaximized = true;        // розвернуть окно браузера на весь екран
        ChromeOptions options = new ChromeOptions();    // Отключить всплывающие окна
        options.addArguments("test-type");              // Отключить всплывающие окна
        options.addArguments("disable-popup-blocking"); // Отключить всплывающие окна



    $(By.xpath("//table[@id='dataTable']//tbody//td[6]/a")).click();        // нажать на кнопку
    с = $$(By.xpath("//div[@class='auction-ithem']")).size()                    //  узнать количество елементов
/////////////////////////////////////////////////////////////////

if ($$(By.xpath("//div[@class='auction-ithem']")).size() != 0) {
            System.out.println("Аукцион не остановлен");
            throw new Error();                                         // остановить тест с ошибкой + текст ошибки
        } else {
            System.out.println("Аукцион успершно остановлен");
        }



///////////////////////////////////////////////////////////
   $(By.name("___description[ru]")).getAttribute("value");        // узнать текс елемента
        $(By.name("deliverer_id")).getText();                      // узнать текс елемента 2 способ

        $(By.name("deliverer_id")).getSelectedText();       // узнать текст вибраного селектора



///////////////////////////////

tempBool = $(By.xpath("//*[text()='тут нужный текст']"));  // поиск по нужному тексту

//////////////////////////////



public static final String user1_email = "емаил";           // если так написать то можно получить текст переменной в любом классе
public static final String user1_password = "пароль123";  // если так написать то можно получить текст переменной в любом классе

loginPg.loginUser(Values.user1_email, Values.user1_password); // визов переменнои в другом классе (Values ето имя класа в котором находится переменная)

///////////////////////////////////////////////


public int getRandomNumber(int a1, int b1) {    // рандомний генератор чисел  нужно подать диапазон чисел
        int a = a1;
        int b = b1;
        int x = a + (int) (Math.random() * ((b - a) + 1));
        //System.out.println("Случайное число x: " + x);
        return x;
    }

//////////////////////////


    public StringBuilder randomStringEN(int s) {            // Рандомное заполнения имен нужно подать количество символов
        String symbols = "abcdefghijklmnopqrstuvwxyz";
        StringBuilder randString = new StringBuilder();
        int count = s;
        for (int i = 0; i < count; i++)
            randString.append(symbols.charAt((int) (Math.random() * symbols.length())));
        System.out.print(randString);
       temp = String.valueOf(randString);
        return randString;
    }

///////////////////////////////////

  $(".loading_progress").should(disappear); // Само подождёт, пока элемент исчезнет
  $("#username").shouldHave(text("Hello, Johny!")); // Само подождёт, пока у элемента появится нужный текст

 $(By.xpath("//div[@class='auction-one__content']")).waitUntil(visible, 30000); // ожидания появления елемента
$("#username").shouldBe(visible);   // ждёт, пока элемент появится
  $("#username").shouldHave(text("Hello, Johny!")); // ждёт, пока текст элемента изменится на "Hello, Johny!"
  $("#login-button").shouldHave(cssClass("green-button")); // ждёт, пока кнопка станет зелёной
  $("#login-button").shouldBe(disabled); // ждёт, пока кнопка станет неактивной
  $(".error").shouldNotBe(visible);  // ждёт, пока элемент исчезнет
  $(".error").should(disappear);     // cамо подождёт, пока элемент исчезнет

clearBrowserCache();       // очистить кеш браузера
   */



   priceaFavorites = priceaFavorites.substring(1, 2);

////////////////////////////////////////////
        public String getMyPass(){                получить переменную из другого класса
   return this.password;
}

//Allure.step("bla bla bla", () -> {
//        $("#sldfbasd").should(visible)
//        });

//        "//option[contains(text(), 'Продам')]/parent::select"



isDisplayed() //возвращает false, если элемент либо невидимый, либо его нет в DOM
exists() //возвращает true, если элемент есть в DOM, иначе - false


siteSoumPriceHammer = siteSoumPriceHammer.substring(0, siteSoumPriceHammer.indexOf(" €")); // обрезать строку от начала до определенного символа

String soumCommissionNotNDS = String.format("%.2f", tempDooble).replace(',', '.'); // округлить до двох знаков и заменить крапку на кому

//////////////////////////////////////////////////
__________
pom.xml
__________

    <dependency>
        <groupId>com.googlecode.json-simple</groupId>
        <artifactId>json-simple</artifactId>
        <version>1.1.1</version>
    </dependency>

    ______________________________
    Config.JsonSimpleWriteExample.java               записати дані до json
    ______________________________


    import org.json.simple.JSONArray;
    import org.json.simple.JSONObject;

    import java.io.FileWriter;
    import java.io.IOException;

    public class Config.JsonSimpleWriteExample {

        public static void main(String[] args) {

            JSONObject obj = new JSONObject();
            obj.put("name", "mkyong.com");
            obj.put("age", 100);

            JSONArray list = new JSONArray();
            list.add("msg 1");
            list.add("msg 2");
            list.add("msg 3");

            obj.put("messages", list);

            try (FileWriter file = new FileWriter("c:\\projects\\test.json")) {
                file.write(obj.toJSONString());
            } catch (IOException e) {
                e.printStackTrace();
            }

            System.out.print(obj);

        }

    }

  _____________________________
    Config.JsonRead.java              Зчитати з файла json
  _____________________________

    import org.json.simple.JSONArray;
    import org.json.simple.JSONObject;
    import org.json.simple.parser.JSONParser;
    import org.json.simple.parser.ParseException;

    import java.io.FileReader;
    import java.io.IOException;
    import java.io.Reader;
    import java.util.Iterator;

    public class Config.JsonRead {

        public static void main(String[] args) {

            JSONParser parser = new JSONParser();

            try (Reader reader = new FileReader("c:\\projects\\test.json")) {

                JSONObject jsonObject = (JSONObject) parser.parse(reader);
                System.out.println(jsonObject);

                String name = (String) jsonObject.get("name");
                System.out.println(name);

                long age = (Long) jsonObject.get("age");
                System.out.println(age);

                // loop array
                JSONArray msg = (JSONArray) jsonObject.get("messages");
                Iterator<String> iterator = msg.iterator();
                while (iterator.hasNext()) {
                    System.out.println(iterator.next());
                }

            } catch (IOException e) {
                e.printStackTrace();
            } catch (ParseException e) {
                e.printStackTrace();
            }

        }


    }



